/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {TreeNode}
 */

var invertTree = function(root) {

    //if function is called on a null argument, return null
    if(root === null){
       return null
    }
    
    //else...assign variables to opposite sides
    let newLeft = root.right;
    let newRight = root.left;
      
     //switch the sides of root
     root.right = newRight
     root.left = newLeft
        
     //recursively call function on both sides to continue switching nodes. 
     invertTree(root.right)
     invertTree(root.left)
      
     return root
    
};
